# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      #- name: Cypress run
       # uses: cypress-io/github-action@v4
       # with:
        #  browser: chrome
      - name: Install a project with a clean slate
        run: npm ci
        
      - name: Run Cypress tests
        run: npm run test:chrome
        continue-on-error: true
        
      #- name: Copy test execution videos
       # run: |
        #  mkdir public
         # cp -r cypress/screenshots public/screenshots
      
     # - name: Merge test results into one
      #  run: npm install --save-dev mochawesome-merge
        
      #- name: Generate HTML report
       # run: npm install --save-dev mochawesome-report-generator
       
      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
           ref: allure
           path: allure

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
            allure_results: allure-results
            gh_pages: allure

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          deploy_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
        
     # - name: Deploy report page
      #  if: always()
       # uses: peaceiris/actions-gh-pages@v3
        #with:
         # PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #PUBLISH_BRANCH: gh-pages
          #PUBLISH_DIR: ./public
